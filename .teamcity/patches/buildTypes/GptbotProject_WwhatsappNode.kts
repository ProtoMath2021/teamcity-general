package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.buildSteps.DockerCommandStep
import jetbrains.buildServer.configs.kotlin.buildSteps.dockerCommand
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'GptbotProject_WwhatsappNode'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("GptbotProject_WwhatsappNode")) {
    expectSteps {
        script {
            name = "Generate Version"
            scriptContent = """
                #!/bin/bash
                set -euo pipefail
                
                echo "=== Generating simple version ==="
                
                # Extract branch name from refs
                BRANCH_REF="%teamcity.build.branch%"
                BRANCH_NAME=${'$'}{BRANCH_REF#refs/heads/}
                BRANCH_NAME=${'$'}{BRANCH_NAME#refs/tags/}
                echo "Branch name: ${'$'}BRANCH_NAME"
                
                # Clean branch name for version identifier
                CLEAN_BRANCH_NAME=${'$'}(echo "${'$'}BRANCH_NAME" | sed 's/[^a-zA-Z0-9.-]/-/g' | tr '[:upper:]' '[:lower:]' | sed 's/^-*//; s/-*${'$'}//')
                
                # Generate simple version: branch-build.number
                DOCKER_VERSION="${'$'}CLEAN_BRANCH_NAME-%build.number%"
                
                echo "� Docker version: ${'$'}DOCKER_VERSION"
                
                # Set version parameters
                echo "##teamcity[setParameter name='env.DOCKER_VERSION' value='${'$'}DOCKER_VERSION']"
                
                echo "✅ Version generation complete"
            """.trimIndent()
        }
        dockerCommand {
            name = "build image"
            commandType = build {
                source = file {
                    path = "Dockerfile.optimized"
                }
                namesAndTags = """
                    protonmath/wwhatsapp-node:%env.DOCKER_VERSION%
                    protonmath/wwhatsapp-node:latest
                """.trimIndent()
            }
        }
        dockerCommand {
            name = "publish"
            commandType = push {
                namesAndTags = "protonmath/wwhatsapp-node:%env.DOCKER_VERSION%"
            }
        }
        dockerCommand {
            name = "publish latest tag"

            conditions {
                matches("teamcity.build.branch", "refs/heads/(main|master)")
            }
            commandType = push {
                namesAndTags = "protonmath/wwhatsapp-node:latest"
            }
        }
    }
    steps {
        update<DockerCommandStep>(2) {
            enabled = false
            clearConditions()
        }
        update<DockerCommandStep>(3) {
            enabled = false
            clearConditions()

            conditions {
                matches("teamcity.build.branch", "refs/heads/(main|master)")
            }
        }
    }
}
